Todos / Erweiterungen:
- Shapes
  > zusätzliches Attribut: Rotationsmatrix
    > automatische Aktualisierung der Rotationsmatrix, von rotAxis und rotAngle, wenn sich einer der Werte ändert.
    > ggf. auch Einzelwerte rotAngleX, rotAngleY, rotAngleZ
    > Umrechnung RotMatrix > RotAchse/-Winkel implementieren
      > https://math.stackexchange.com/questions/261617/find-the-rotation-axis-and-angle-of-a-matrix/1886992
    > Unterstützung zur intuitiven Definition der Rotation
      > Anwendungsbeispiel: Würfel erst um Y 45 Grad drehen, von dort aus dann nach vorn kippen
    > Rotation generell stark ausbauen
  > weitere Form: Kegelstumpf
  > Info-Attribut einer Klasse ShapeInfo hinzufügen: z.B. Typ des Shapes (Cube, Pyramid), Volumen, ...
  > Texturen für Pyramiden, Prismen, Kugeln
  > Wireframes: nur Anzeige der Eckpunkte und Linien dazwischen
    > mit OpenGL-Mitteln oder durch lange schmale Zylinder zwischen den Eckpunkten
  > Vertex Streams zur platzsparenden Speicherung
    > https://www.khronos.org/opengl/wiki/Vertex_Specification#Vertex_Stream
- Zusammenstellen von Shapes und Szenen mit mehreren Shapes
  > per Drag&Drop
  > Aneinander"kleben" zweier Shapes bei bestimmten Dreiecken
    > z.B. zwei Tetraader an ihren Basisdreiecken: Aufbau komplexer Shapes aus Tetraedern
  > Klötzchenwelt mit Würfeln oder/und Tetraedern
    > entsprechendes Koordinatensystem
    > dynamisches Hinzufügen weiterer Elemente
      > Animation mit Kürzeste-Wege-Algorithmus
- in GLShapeFactoryCV.joinShapes() das Zentrum (d.h. Modellkoordinate (0,0,0)) automatisch setzen:
    z.B. Mittelwert aller Eckpunkte nehmen
    oder als Mittel der Schwerpunkte der einzelnen Shapes gewichtet mit deren Volumina
- GLShapeFactoryCV ausbauen
  > Bei einfarbigen Würfeln die Kanten in einer anderen Farbe (z.B. schwarz) zeichnen
    > Kanten nochmals zeichnen im "GL_LINES Mode"
- Effizienz des Umgangs mit Textures prüfen
  > einmal erzeugen und dann von mehreren Shapes aus zugreifen?
- GLAnimatorFactoryCV ausbauen
  > u.a. Berechnungsfunktionen für Wege etc. aus PropAnimUtils übernehmen
  > auch Kollisionserkennung
- Berührungen
  > Erkennen, welcher Shape berührt wurde ("Picking"):
    https://en.wikibooks.org/wiki/OpenGL_Programming/Object_selection
    http://www.opengl-tutorial.org/miscellaneous/clicking-on-objects/picking-with-an-opengl-hack/
    https://ogldev.org/www/tutorial29/tutorial29.html
- dynamische Änderungen von Camera Position und Focus
- Beleuchtung
- Import von Modellen: https://learnopengl.com/Model-Loading/Model